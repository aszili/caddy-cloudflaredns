name: Docker Build & Push

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ github.repository_owner }}
  DOCKER_CONTAINER_NAME: caddy-cloudflaredns
  DOCKER_TARGET_PLATFORM: linux/amd64

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        if: ${{ !github.event.act }}

      - name: Get latest Caddy Version
        id: caddy
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: caddyserver
          repo: caddy
          token: ${{ secrets.GITHUB_TOKEN }}
          excludes: prerelease, draft

      - name: Sanitize Caddy Version
        run: echo "SANITIZED_CADDY_VERSION=$(echo "${{ steps.caddy.outputs.release }}"|awk '{print substr($0, 2)}')" >> $GITHUB_ENV

      - name: Save current date as env variable
        run: echo "builddate=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare
        if: success()
        id: prepare
        run: |
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}
          echo "::set-output name=tag::${{ steps.caddy.outputs.release }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ env.DOCKER_TARGET_PLATFORM }}
          push: true
          build-args: CADDY_VERSION=${{ env.SANITIZED_CADDY_VERSION }}
          tags: |
            ghcr.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_CONTAINER_NAME }}:${{ steps.prepare.outputs.tag }}
            ghcr.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_CONTAINER_NAME }}:latest

      - name: Tag and push current repo code
        run: |
          git config --global user.name "${{ github.repository_owner }}"
          git tag -f -s ${{ steps.prepare.outputs.tag }} -m "built on ${{ env.SANITIZED_CADDY_VERSION }}"
          git push origin ${{ steps.prepare.outputs.tag }}
